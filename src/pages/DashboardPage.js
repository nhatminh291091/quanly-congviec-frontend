import React, { useState, useEffect } from 'react';
import { apiService } from '../services/api';

const DashboardPage = () => {
  const [taskList, setTaskList] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
   const fetchAllTasks = async () => {
  try {
    const rawData = await apiService.get('api/tasks/all');
    console.log("üì¶ rawData", rawData);

    // L√†m ph·∫≥ng m·∫£ng 2 c·∫•p: [[{...}], [{...}], ...] ‚Üí [{...}, {...}, ...]
    const tasks = rawData.flat();

    setTaskList(tasks);
  } catch (error) {
    console.error('‚ùå L·ªói khi l·∫•y danh s√°ch c√¥ng vi·ªác:', error);
    setTaskList([]);
  } finally {
    setIsLoading(false);
  }
};

    fetchAllTasks();
  }, []);

  return (
    <div className="flex flex-col flex-1">
      <header className="flex justify-between items-center px-6 py-4 bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-600 text-white shadow-md">
        <h1 className="text-3xl font-extrabold tracking-tight">üé® T·ªïng h·ª£p c√¥ng vi·ªác</h1>
      </header>

      <main className="flex-1 p-8 bg-white/70 backdrop-blur-lg overflow-y-auto rounded-tl-3xl">
        <h2 className="text-2xl font-bold text-indigo-700 mb-6 flex items-center gap-2">
          üìã <span>Danh s√°ch c√¥ng vi·ªác ƒë∆∞·ª£c giao</span>
        </h2>

        {isLoading ? (
          <p className="text-gray-600">ƒêang t·∫£i d·ªØ li·ªáu...</p>
        ) : taskList.length === 0 ? (
          <p className="text-gray-500 italic">Kh√¥ng c√≥ d·ªØ li·ªáu c√¥ng vi·ªác.</p>
        ) : (
          <div className="overflow-x-auto rounded-2xl shadow-lg border border-gray-200">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gradient-to-r from-blue-200 to-indigo-300 text-indigo-900 uppercase text-xs">
                <tr>
                  <th className="px-6 py-3 text-left">#</th>
                  <th className="px-6 py-3 text-left w-[400px]">T√™n c√¥ng vi·ªác</th>
                  <th className="px-6 py-3 text-left">Lƒ©nh v·ª±c</th>
                  <th className="px-6 py-3 text-left">Ti·∫øn ƒë·ªô</th>
                  <th className="px-6 py-3 text-left">Ch·ªß tr√¨</th>
                  <th className="px-6 py-3 text-left">Ho√†n th√†nh</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-100">
                {taskList.map((task, index) => (
                  <tr key={index} className="hover:bg-indigo-50 transition">
                    <td className="px-6 py-4 font-medium text-center">{index + 1}</td>
                    <td className="px-6 py-4 whitespace-pre-wrap break-words leading-snug">{task['T√™n c√¥ng vi·ªác']}</td>
                    <td className="px-6 py-4">{task['C√°c lƒ©nh v·ª±c c√¥ng t√°c']}</td>
                    <td className="px-6 py-4">
                      <span className={`inline-block px-3 py-1 rounded-full text-xs font-semibold shadow-sm ${
                        task['Ti·∫øn ƒë·ªô']?.toLowerCase().includes('ho√†n th√†nh') ? 'bg-green-200 text-green-800' :
                        task['Ti·∫øn ƒë·ªô']?.toLowerCase().includes('ch·∫≠m') ? 'bg-red-200 text-red-800' :
                        'bg-yellow-200 text-yellow-800'
                      }`}>
                        {task['Ti·∫øn ƒë·ªô']}
                      </span>
                    </td>
                    <td className="px-6 py-4">{task['Ng∆∞·ªùi ch·ªß tr√¨']}</td>
                    <td className="px-6 py-4">{task['Th·ªùi gian ho√†n th√†nh']}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}
      </main>
    </div>
  );
};

export default DashboardPage;
